#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'batu_types'

module BatuThrift
  class Client
    include ::Thrift::Client

    def CallBack(callTime, name, paramMap)
      send_CallBack(callTime, name, paramMap)
      return recv_CallBack()
    end

    def send_CallBack(callTime, name, paramMap)
      send_message('CallBack', CallBack_args, :callTime => callTime, :name => name, :paramMap => paramMap)
    end

    def recv_CallBack()
      result = receive_message(CallBack_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'CallBack failed: unknown result')
    end

    def put(newArticle)
      send_put(newArticle)
      recv_put()
    end

    def send_put(newArticle)
      send_message('put', Put_args, :newArticle => newArticle)
    end

    def recv_put()
      result = receive_message(Put_result)
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_CallBack(seqid, iprot, oprot)
      args = read_args(iprot, CallBack_args)
      result = CallBack_result.new()
      result.success = @handler.CallBack(args.callTime, args.name, args.paramMap)
      write_result(result, oprot, 'CallBack', seqid)
    end

    def process_put(seqid, iprot, oprot)
      args = read_args(iprot, Put_args)
      result = Put_result.new()
      @handler.put(args.newArticle)
      write_result(result, oprot, 'put', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class CallBack_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    CALLTIME = 1
    NAME = 2
    PARAMMAP = 3

    FIELDS = {
      CALLTIME => {:type => ::Thrift::Types::I64, :name => 'callTime'},
      NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
      PARAMMAP => {:type => ::Thrift::Types::MAP, :name => 'paramMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CallBack_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRING}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Put_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    NEWARTICLE = 1

    FIELDS = {
      NEWARTICLE => {:type => ::Thrift::Types::STRUCT, :name => 'newArticle', :class => ::Article}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Put_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

